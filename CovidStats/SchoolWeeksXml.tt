<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="CovidStats.SchoolsSummary" #>
<#@ parameter type="System.Collections.Generic.List<CovidStats.SchoolsSummary.HseSchoolsSummary>" name="Weeks" #>
<Weeks>
<#    
 var allValueNames= Weeks.Aggregate(new List<string>(),
                (pList, pItem) =>
                {
                    if(pItem.Values!=null)
                        pList.AddRange(pItem.Values.Select(pX => pX.Name));
                    return pList;
                }).Distinct().ToList();
    allValueNames.Sort();

    var allFacilityResultSummary= Weeks.Aggregate(new List<string>(),
                (pList, pItem) =>
                {
                    if(pItem.Values!=null)
                        pList.AddRange(pItem.AllFacilityTypesResultsSummary.Select(pX => pX.Name));
                    return pList;
                }).Distinct().ToList();
    allFacilityResultSummary.Sort();

    var allSchoolsTesting= Weeks.Aggregate(new List<string>(),
                (pList, pItem) =>
                {
                    if(pItem.Values!=null)
                        pList.AddRange(pItem.Schools.Testing.Select(pX => pX.Name));
                    return pList;
                }).Distinct().ToList();
    allSchoolsTesting.Sort();

    var allSchoolsMassTesting= Weeks.Aggregate(new List<string>(),
                (pList, pItem) =>
                {
                    if(pItem.Values!=null)
                        pList.AddRange(pItem.Schools.MassTesting.Select(pX => pX.Name));
                    return pList;
                }).Distinct().ToList();
    allSchoolsMassTesting.Sort();



   var allChildcareTesting= Weeks.Aggregate(new List<string>(),
                (pList, pItem) =>
                {
                    if(pItem.Values!=null)
                        pList.AddRange(pItem.Childcare.Testing.Select(pX => pX.Name));
                    return pList;
                }).Distinct().ToList();
    allChildcareTesting.Sort();

    var allChildcareMassTesting= Weeks.Aggregate(new List<string>(),
                (pList, pItem) =>
                {
                    if(pItem.Values!=null)
                        pList.AddRange(pItem.Childcare.MassTesting.Select(pX => pX.Name));
                    return pList;
                }).Distinct().ToList();
    allChildcareMassTesting.Sort();
for(var i = 0;  i < Weeks.Count; i++) { 
#>
    <Week>
        <Number><#= Weeks[i].Week #></Number>
        <SourceFileName><#= Weeks[i].SourceFileName #></SourceFileName>
<#
        foreach(var item in allValueNames ) {
            var val= Weeks[i].Values.FirstOrDefault(pX=>pX.Name==item);
            var elementName = "Overall"+val.Name.Replace(" ", "").Replace("%", "").Replace("+", "");
#>
        <<#= elementName+"Week" #>><#= val.WeekValue #></<#= elementName+"Week" #>>
        <<#= elementName+"Cumulative" #>><#= val.CumulativeToDate #></<#= elementName+"Cumulative" #>>
<#      } 
        foreach(var item in allFacilityResultSummary) {
            var val= Weeks[i].AllFacilityTypesResultsSummary.FirstOrDefault(pX=>pX.Name==item);
            var elementName = "Overall"+val.Name.Replace(" ", "").Replace("%", "").Replace("+", "").Replace("*", "");
#>
        <<#= elementName+"NoFacilities" #>><#= val.NoFacilities #></<#= elementName+"NoFacilities" #>>
        <<#= elementName+"NoTested" #>><#= val.NoTested #></<#= elementName+"NoTested" #>>
        <<#= elementName+"NoDetected" #>><#= val.NoDetected #></<#= elementName+"NoDetected" #>>
        <<#= elementName+"NoNotDetected" #>><#= val.NoNotDetected #></<#= elementName+"NoNotDetected" #>>
        <<#= elementName+"DetectedPercent" #>><#= val.DetectedPercent #></<#= elementName+"DetectedPercent" #>>
<#      } 
        foreach(var item in allSchoolsTesting) {
            var val= Weeks[i].Schools.Testing.FirstOrDefault(pX=>pX.Name==item);
            var elementName = "SchoolsTesting"+val.Name.Replace(" ", "").Replace("%", "").Replace("+", "").Replace("*", "");
#>
        <<#= elementName+"NoFacilities" #>><#= val.NoFacilities #></<#= elementName+"NoFacilities" #>>
        <<#= elementName+"NoTested" #>><#= val.NoTested #></<#= elementName+"NoTested" #>>
        <<#= elementName+"NoDetected" #>><#= val.NoDetected #></<#= elementName+"NoDetected" #>>
        <<#= elementName+"NoNotDetected" #>><#= val.NoNotDetected #></<#= elementName+"NoNotDetected" #>>
        <<#= elementName+"DetectedPercent" #>><#= val.DetectedPercent #></<#= elementName+"DetectedPercent" #>>
<#      } 
        foreach(var item in allSchoolsMassTesting) {
            var val= Weeks[i].Schools.MassTesting.FirstOrDefault(pX=>pX.Name==item);
            var elementName = "SchoolsMassTesting"+val.Name.Replace(" ", "").Replace("%", "").Replace("+", "").Replace("*", "");
#>
        <<#= elementName+"NoFacilities" #>><#= val.NoFacilities #></<#= elementName+"NoFacilities" #>>
        <<#= elementName+"NoTested" #>><#= val.NoTested #></<#= elementName+"NoTested" #>>
        <<#= elementName+"NoDetected" #>><#= val.NoDetected #></<#= elementName+"NoDetected" #>>
        <<#= elementName+"NoNotDetected" #>><#= val.NoNotDetected #></<#= elementName+"NoNotDetected" #>>
        <<#= elementName+"DetectedPercent" #>><#= val.DetectedPercent #></<#= elementName+"DetectedPercent" #>>
<#      } 
        foreach(var item in allChildcareTesting) {
            var val= Weeks[i].Childcare.Testing.FirstOrDefault(pX=>pX.Name==item);
            var elementName = "ChildcareTesting"+val.Name.Replace(" ", "").Replace("%", "").Replace("+", "").Replace("*", "");
#>
        <<#= elementName+"NoFacilities" #>><#= val.NoFacilities #></<#= elementName+"NoFacilities" #>>
        <<#= elementName+"NoTested" #>><#= val.NoTested #></<#= elementName+"NoTested" #>>
        <<#= elementName+"NoDetected" #>><#= val.NoDetected #></<#= elementName+"NoDetected" #>>
        <<#= elementName+"NoNotDetected" #>><#= val.NoNotDetected #></<#= elementName+"NoNotDetected" #>>
        <<#= elementName+"DetectedPercent" #>><#= val.DetectedPercent #></<#= elementName+"DetectedPercent" #>>
<#      } 
      foreach(var item in allChildcareMassTesting) {
            var val= Weeks[i].Childcare.MassTesting.FirstOrDefault(pX=>pX.Name==item);
            var elementName = "ChildcareMassTesting"+val.Name.Replace(" ", "").Replace("%", "").Replace("+", "").Replace("*", "");
#>
        <<#= elementName+"NoFacilities" #>><#= val.NoFacilities #></<#= elementName+"NoFacilities" #>>
        <<#= elementName+"NoTested" #>><#= val.NoTested #></<#= elementName+"NoTested" #>>
        <<#= elementName+"NoDetected" #>><#= val.NoDetected #></<#= elementName+"NoDetected" #>>
        <<#= elementName+"NoNotDetected" #>><#= val.NoNotDetected #></<#= elementName+"NoNotDetected" #>>
        <<#= elementName+"DetectedPercent" #>><#= val.DetectedPercent #></<#= elementName+"DetectedPercent" #>>
<#      } #>
    </Week>
<#    }#>
</Weeks>